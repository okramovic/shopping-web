{"dependencies":[{"name":"./dropbox-base","loc":{"line":1,"column":26}},{"name":"./routes","loc":{"line":2,"column":21}}],"generated":{"js":"var DropboxBase = require('./dropbox-base');\nvar routes = require('./routes');\nvar Dropbox;\n\n/**\n * @class Dropbox\n * @extends DropboxBase\n * @classdesc The Dropbox SDK class that provides methods to read, write and\n * create files or folders in a user's Dropbox.\n * @arg {Object} options\n * @arg {String} [options.accessToken] - An access token for making authenticated\n * requests.\n * @arg {String} [options.clientId] - The client id for your app. Used to create\n * authentication URL.\n * @arg {String} [options.selectUser] - Select user is only used by DropboxTeam.\n * It specifies which user the team access token should be acting as.\n */\nDropbox = function (options) {\n  DropboxBase.call(this, options);\n};\n\nDropbox.prototype = Object.create(DropboxBase.prototype);\n\nDropbox.prototype.constructor = Dropbox;\n\n// Add the user endpoint methods to the prototype\nDropbox.prototype = Object.assign(Dropbox.prototype, routes);\n\nDropbox.prototype.filesGetSharedLinkFile = function (arg) {\n  return this.request('sharing/get_shared_link_file', arg, 'api', 'download');\n};\n\nmodule.exports = Dropbox;\n"},"hash":"845f6d8c16f42a27f61ba42fc00a87c1"}