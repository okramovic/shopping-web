{"dependencies":[{"name":"superagent","loc":{"line":1,"column":22}},{"name":"es6-promise","loc":{"line":2,"column":22}},{"name":"./get-base-url","loc":{"line":3,"column":25}}],"generated":{"js":"var request = require('superagent');\nvar Promise = require('es6-promise').Promise;\nvar getBaseURL = require('./get-base-url');\n\n// This doesn't match what was spec'd in paper doc yet\nvar buildCustomError = function (error, response) {\n  var err;\n  if (response) {\n    try {\n      err = JSON.parse(response.text);\n    } catch (e) {\n      err = response.text;\n    }\n  }\n  return {\n    status: error.status,\n    error: err || error,\n    response: response\n  };\n};\n\nvar rpcRequest = function (path, body, auth, host, accessToken, selectUser) {\n  var promiseFunction = function (resolve, reject) {\n    var apiRequest;\n\n    function success(data) {\n      if (resolve) {\n        resolve(data);\n      }\n    }\n\n    function failure(error) {\n      if (reject) {\n        reject(error);\n      }\n    }\n\n    function responseHandler(error, response) {\n      if (error) {\n        failure(buildCustomError(error, response));\n      } else {\n        success(response.body);\n      }\n    }\n\n    // The API expects null to be passed for endpoints that dont accept any\n    // parameters\n    if (!body) {\n      body = null;\n    }\n\n    apiRequest = request.post(getBaseURL(host) + path)\n      .type('application/json');\n\n    switch (auth) {\n      case 'team':\n      case 'user':\n        apiRequest.set('Authorization', 'Bearer ' + accessToken);\n        break;\n      case 'noauth':\n        break;\n      default:\n        throw new Error('Unhandled auth type: ' + auth);\n    }\n\n    if (selectUser) {\n      apiRequest = apiRequest.set('Dropbox-API-Select-User', selectUser);\n    }\n\n    apiRequest.send(body)\n      .end(responseHandler);\n  };\n\n  return new Promise(promiseFunction);\n};\n\nmodule.exports = rpcRequest;\n"},"hash":"8b1bd86abf31ac4512ccef8473a62861"}